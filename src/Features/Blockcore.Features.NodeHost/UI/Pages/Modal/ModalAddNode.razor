@using Blockcore.Utilities.Extensions
@using Blockcore.UI.BlazorModal

@inject Blockcore.Connection.IConnectionManager ConnectionManager
@inject ModalService ModalService

@if (ShowForm)
{
<div class="input-group">
		<input @bind="NodeIp" type="text" class="form-control bg-secondary text-light" placeholder="Node IP Address" />
		<div class="input-group-append">
			<button class="btn btn-primary" @onclick="Addnode">
				<span class="oi oi-plus" aria-hidden="true"></span> Add Node</button>
		</div>
        <div class="input-group mt-1">
            <div class="text-danger">
                @Alert
            </div>
        </div>
</div>
} else {
<div class="row ">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <h5 class="text-success">@Alert</h5>
                <button class="btn btn-primary" @onclick="CloseModal">Close</button>
            </div>
        </div>
    </div>
</div>
}
@code
{
	bool ShowForm { get; set; } = true;

    private void CloseModal()
    {
        ModalService.Close();        
    }
    private string NodeIp { get; set; }
    string Alert { get; set; }
    private void Addnode()
    {
        if (string.IsNullOrEmpty(this.NodeIp)) { this.Alert = "Please enter an IP address"; return; }
        this.Alert = string.Empty;
        var endpoint = this.NodeIp.ToIPEndPoint(this.ConnectionManager.Network.DefaultPort);
        this.ConnectionManager.AddNodeAddress(endpoint);
        this.Alert = $"Added Node: {endpoint}";
        ShowForm = false;
    }
}