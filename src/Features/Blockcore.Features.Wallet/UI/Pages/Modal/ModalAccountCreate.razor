@using Blockcore.Features.Wallet.Interfaces
@using NBitcoin;
@using Blockcore.Features.Wallet.Api.Controllers
@using Blockcore.UI.BlazorModal

@inject NavigationManager NavigationManager
@inject IWalletManager WalletManager
@inject Blockcore.Utilities.IDateTimeProvider DateTimeProvider
@inject IWalletSyncManager WalletSyncManager
@inject ModalService ModalService

@if (ShowForm)
{
    <div class="row ">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                
                    <div class="form-group row">
                        <label class="col-sm-2 col-form-label">
                            <span class="text">Name</span>
                        </label>
                        <div class="col-sm-10">
                            <input @bind="AccountName" type="text" class="form-control bg-secondary text-light" placeholder="Please enter your Account name" />
                        </div>
                    </div>

                    @if (IsSubmitting)
                    {
                        <button class="btn btn-danger" disabled>
                            <span class="spinner-border spinner-border-sm"></span> Working ......
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-primary" @onclick="callCreateAccount">Create Account</button>
                    }
                    <div class="input-group mt-1">
                        <div class="text-danger">@Alert</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="row ">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="text-success">@Alert</h5>
                    <button class="btn btn-primary" @onclick="CloseModal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@code {

    public string WalletName { get; set; }

    bool ShowForm { get; set; } = true;
    public string AccountName { get; set; }  
    string Alert { get; set; }
    private bool IsSubmitting { get; set; }
    private async Task callCreateAccount()
    {
        IsSubmitting = true;
        StateHasChanged();
        await Task.Delay(1);  // flush changes
        await CreateAccount();
        IsSubmitting = false;
        StateHasChanged();
        await Task.Delay(1);
    }
    private async Task CreateAccount()
    {

        
        if (string.IsNullOrEmpty(this.AccountName)) { this.Alert = "Please enter a Account name"; return; }
  
        this.Alert = string.Empty;
        
        
        this.Alert = "Your Account has now been created. ";
        ShowForm = false;
        await Task.CompletedTask;
    }
   
    private void CloseModal()
    {
        ModalService.Close();
        NavigationManager.NavigateTo("Accounts/" + WalletName);
    }
}